<?php

namespace App\Console\Commands;

use App\MOdel\SiteMap;
use Exception;
use Illuminate\Console\Command;
use Illuminate\Support\Facades\DB;

class chaosSEO extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'sitemap:init';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Generate sitemap file';

    /**
     * sitemap xsl模板
     * @var string
     */
    protected $sitemapXSL = <<< EOT
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" 
    xmlns:html="http://www.w3.org/TR/REC-html40"
    xmlns:sitemap="http://www.sitemaps.org/schemas/sitemap/0.9"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
    <xsl:output method="html" version="1.0" encoding="UTF-8" indent="yes" />
    <xsl:template match="/">
        <html xmlns="http://www.w3.org/1999/xhtml">
            <head>
                <title>XML Sitemap</title>
                <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
                <meta name="robots" content="noindex,follow" />
                <style type="text/css">
                    body {
                        font-family:"Microsoft YaHei","SimSun","sans-serif";
                        font-size:14px;
                    }
                    
                    #intro {
                        padding:5px 13px 5px 0;
                        margin:10px 10px 10px 0;
                        font-size: 14px;
                        color: #666;
                    }
                    .text-gradient{
                        font-size: 16px;
                        font-weight: bolder;
                        -webkit-background-clip: text;
                        background-clip: text;
                        -webkit-text-fill-color: transparent;
                        background-image: -mos-linear-gradient(-40deg, #00c6fb, #005bea);
                        background-image: -webkit-linear-gradient(-40deg, #00c6fb, #005bea);
                        background-image: linear-gradient(-40deg, #00c6fb, #005bea);
                    }
                    
                    #intro p {
                        line-height:	16px;
                        margin: 0;
                        padding: 3px;
                    }
                    #intro strong {
                        font-weight:normal;
                    }
                    td {
                        font-size:11px;
                        padding: 7px 8px;
                        padding-right:30px;
                    }
                    
                    th {
                        text-align:left;
                        padding:7px;
                        font-size:11px;
                    }
                    table{
                        border-collapse: collapse;
                        cellpadding: 0;
                        width: 100%;
                    }
                    table tr:nth-child(odd) td {
                        background-color: #eee !important;
                    }

                    table tr:hover td{
                        background-color: #c6c6c6;
                    }
                    a {
                        color:black;
                        text-decoration: none;
                    }
                    a:hover{
                        text-decoration: underline;
                    }
                    main{
                    width: 900px;
                    margin: 0 auto;
                    }
                </style>
            </head>
            <body>
                <main>
        <h1>XML Sitemap Index</h1>
        <div id="intro">
            <p>
                This is a XML Sitemap which is supposed to be processed by search engines
            </p>
            <p>
                Generated by <a class="text-gradient" href="http://www.blog1997.com">Blog1997</a> seo tools.
            </p>
            <p>This XML Sitemap contains <xsl:value-of select="count(sitemap:sitemapindex/sitemap:sitemap)"/> sitemaps.</p>
        </div>
        <div id="content">
            <table cellpadding="5">
                <tr style="border-bottom:1px black solid;">
                    <th>URL of sub-sitemap</th>
                    <th>Last modified (GMT)</th>
                </tr>
                <xsl:for-each select="sitemap:sitemapindex/sitemap:sitemap">
                    <tr>
                        <td>
                            <xsl:variable name="itemURL">
                                <xsl:value-of select="sitemap:loc"/>
                            </xsl:variable>
                            <a href="{\$itemURL}">
                                <xsl:value-of select="sitemap:loc"/>
                            </a>
                        </td>
                        <td>
                            <xsl:value-of select="concat(substring(sitemap:lastmod,0,11),concat(' ', substring(sitemap:lastmod,12,5)))"/>
                        </td>
                    </tr>
                </xsl:for-each>
            </table>
        </div>
        </main>
            </body>
        </html>
    </xsl:template>
</xsl:stylesheet>
EOT;

    /**
     * sitemap_2 xsl不满
     */
    protected $sitemapXSL2 = <<< EOT
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" 
            xmlns:html="http://www.w3.org/TR/REC-html40"
            xmlns:sitemap="http://www.sitemaps.org/schemas/sitemap/0.9"
            xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:output method="html" version="1.0" encoding="UTF-8" indent="yes" />
        <xsl:template match="/">
            <html xmlns="http://www.w3.org/1999/xhtml">
                <head>
                    <title>XML Sitemap</title>
                    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
                    <meta name="robots" content="noindex,follow" />
                    <style type="text/css">
                        body {
                            font-family:"Microsoft YaHei","SimSun","sans-serif";
                            font-size:14px;
                        }
                        
                        #intro {
                            padding:5px 13px 5px 0;
                            margin:10px 10px 10px 0;
                            font-size: 14px;
                            color: #666;
                        }
                        .text-gradient{
                            font-size: 16px;
                            font-weight: bolder;
                            -webkit-background-clip: text;
                            background-clip: text;
                            -webkit-text-fill-color: transparent;
                            background-image: -mos-linear-gradient(-40deg, #00c6fb, #005bea);
                            background-image: -webkit-linear-gradient(-40deg, #00c6fb, #005bea);
                            background-image: linear-gradient(-40deg, #00c6fb, #005bea);
                        }
                        
                        #intro p {
                            line-height:	16px;
                            margin: 0;
                            padding: 3px;
                        }
                        #intro strong {
                            font-weight:normal;
                        }
                        
                        td {
                            font-size:11px;
                            padding: 7px 8px;
                            padding-right:30px;
                        }
                        
                        th {
                            text-align:left;
                            padding:7px;
                            font-size:11px;
                        }
                        table{
                            border-collapse: collapse;
                            cellpadding: 0;
                            width: 100%;
                        }
                        table tr:nth-child(odd) td {
                            background-color: #eee !important;
                        }
    
                        table tr:hover td{
                            background-color: #c6c6c6;
                        }
                        a {
                            color:black;
                            text-decoration: none;
                        }
                        a:hover{
                            text-decoration: underline;
                        }
                        main{
                        width: 900px;
                        margin: 0 auto;
                        }
                    </style>
                </head>
                <body>
                    <main>
            <h1>XML Sitemap Index</h1>
            <div id="intro">
                <p>
                    This is a XML Sitemap which is supposed to be processed by search engines
                </p>
                <p>
                    Generated by <a class="text-gradient" href="http://www.blog1997.com">Blog1997</a> seo tools.
                </p>
                <p>This XML Sitemap contains <xsl:value-of select="count(sitemap:urlset/sitemap:url)"/> sitemaps.</p>
            </div>
            <div id="content">
                <table cellpadding="5">
                    <tr style="border-bottom:1px black solid;">
                        <th>URL of sub-sitemap</th>
                        <th>Changefreq</th>
                        <th>Priority</th>
                        <th>Last modified (GMT)</th>
                    </tr>
                    <xsl:variable name="lower" select="'abcdefghijklmnopqrstuvwxyz'"/>
                    <xsl:variable name="upper" select="'ABCDEFGHIJKLMNOPQRSTUVWXYZ'"/>
                    <xsl:for-each select="sitemap:urlset/sitemap:url">
                        <tr>
                            <td>
                                <xsl:variable name="itemURL">
                                    <xsl:value-of select="sitemap:loc"/>
                                </xsl:variable>
                                <a href="{\$itemURL}">
                                    <xsl:value-of select="sitemap:loc"/>
                                </a>
                            </td>
                            <td>
                                <xsl:value-of select="concat(translate(substring(sitemap:changefreq, 1, 1),concat(\$lower, \$upper),concat(\$upper, \$lower)),substring(sitemap:changefreq, 2))"/>
                            </td>
                            <td>
                                <xsl:value-of select="concat(sitemap:priority*100,'%')"/>
                            </td>
                            <td>
                                <xsl:value-of select="concat(substring(sitemap:lastmod,0,11),concat(' ', substring(sitemap:lastmod,12,5)))"/>
                            </td>
                        </tr>
                    </xsl:for-each>
                </table>
            </div>
            </main>
                </body>
            </html>
        </xsl:template>
</xsl:stylesheet>
EOT;

    /**
     * Create a new command instance.
     *
     * @return void
     */
    public function __construct()
    {
        parent::__construct();
    }

    /**
     * Execute the console command.
     *
     * @return mixed
     */
    public function handle()
    {
        if (!$this->confirm('This operate clear all sitemap files, are you sure continue?')) {
            return;
        }
        
        $appUrl = env('APP_URL', 'http://www.example.com'); // 获取项目的地址

        // 创建 sitemap_index文件
        $sitemapIndexContent = '<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="' . $appUrl . '/sitemap.xsl"?><sitemapindex xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"></sitemapindex>';
        $siteMapIndexPath = public_path('sitemap.xml');

        // 获取public下的文件列表
        $fileList = scandir(public_path());
        $fileList = array_filter($fileList, function ($v) {
            return strpos($v, 'sitemap') === 0;
        });

        if ($fileList) {
            array_map(function ($v) {
                unlink(public_path($v));
            }, $fileList);
        }

        if (is_file($siteMapIndexPath)) {
            unlink($siteMapIndexPath);
            file_put_contents($siteMapIndexPath, $sitemapIndexContent);
        } else {
            file_put_contents($siteMapIndexPath, $sitemapIndexContent);
        }

        // 创建 sitemap_index xsl文件
        $sitemapXSLPath = public_path('sitemap.xsl');

        if (is_file($sitemapXSLPath)) {
            unlink($sitemapXSLPath);
            file_put_contents($sitemapXSLPath, $this->sitemapXSL);
        } else {
            file_put_contents($sitemapXSLPath, $this->sitemapXSL);
        }


        // 创建sitemap_2.xsl 样式文件
        $sitemapXSLPath2 = public_path('sitemap_2.xsl');

        if (is_file($sitemapXSLPath2)) {
            unlink($sitemapXSLPath2);
            file_put_contents($sitemapXSLPath2, $this->sitemapXSL2);
        } else {
            file_put_contents($sitemapXSLPath2, $this->sitemapXSL2);
        }

        // 更新 .gitignore文件
        $gitIgnoreFilePath = base_path('.gitignore');
        if (is_file($gitIgnoreFilePath)) {
            $gitIgnoreContent = file_get_contents($gitIgnoreFilePath);
            $appendContent = '/public/sitemap*';
            if (strpos($gitIgnoreContent, $appendContent) === false) {
                file_put_contents($gitIgnoreFilePath, $appendContent, FILE_APPEND);
            }
        }

        // 向SiteMap模型中插入sitemap.xml的记录
        $url = env('APP_URL') . '/sitemap.xml';

        // 判断模型中是否有记录
        $count = SiteMap::selectRaw('count(id) as count')->first()->count;
        if ($count) {
            DB::statement('truncate xy_sitemap_info');
        }

        try {
            SiteMap::create([
                'sitemap_url' => $url,
                'mobile' => 'pc,mobile',
                'changefreq'  => 'weekly',
                'priority' => 1,
                'level' => 1
            ]);
        } catch (Exception $e) {

        }

        $this->info('sitemap initialize successful');
    }
}
